#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#define MAX_CMD_LEN 255
#define MAX_ARGS 64
#define PROMPT "simple_shell$ "
#define DELIM " \t\r\n\a"
/**
* main - Entry point
*
* Return: Always 0 (Success)
*/
int main(void)
{
char cmd[MAX_CMD_LEN];
char *argv[MAX_ARGS];
pid_t child_pid;
int status;
int i;
char *token;
while (1)
{
printf(PROMPT);
if (fgets(cmd, MAX_CMD_LEN, stdin) == NULL)
{
printf("\n");
exit(0);
}
cmd[strlen(cmd) - 1] = '\0';
i = 0;
token = strtok(cmd, DELIM);
while (token != NULL)
{
argv[i] = token;
i++;
token = strtok(NULL, DELIM);
}
argv[i] = NULL;
child_pid = fork();
if (child_pid == -1)
{
perror("Error:");
return (1);
}
if (child_pid == 0)
{
if (execve(argv[0], argv, NULL) == -1)
{
perror("Error:");
}
exit(0);
}
else
{
wait(&status);
}
}
return (0);
}
